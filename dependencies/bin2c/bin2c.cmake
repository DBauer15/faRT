# Adapted from: https://github.com/wjakob/nanogui/blob/master/resources/bin2c.cmake
function(embed_shaders TARGET OUTPUT_NAME INPUT_FILES INPUT_IS_ASCII)

  set(OUTPUT_NAME ${CMAKE_BINARY_DIR}/generated_sources/${OUTPUT_NAME})

  # Create header for C file
  file(WRITE ${OUTPUT_NAME}.c "/* Autogenerated by bin2c */\n\n")
  file(APPEND ${OUTPUT_NAME}.c "#include <stdint.h>\n\n")

  # Create header of H file
  file(WRITE ${OUTPUT_NAME}.h "/* Autogenerated by bin2c */\n\n")
  file(APPEND ${OUTPUT_NAME}.h "#pragma once\n")
  file(APPEND ${OUTPUT_NAME}.h "#include <stdint.h>\n\n")

  string(REPLACE "," ";" INPUT_LIST ${INPUT_FILES})

  # Iterate through binary files files
  foreach(bin ${INPUT_LIST})
    # Get short filename
    string(REGEX MATCH "([^/]+)$" filename ${bin})
    # Replace filename spaces & extension separator for C compatibility
    string(REGEX REPLACE "\\.| |-" "_" filename ${filename})
    # Convert to lower case
    string(TOLOWER ${filename} filename)
    # Read hex data from file
    file(READ ${bin} filedata HEX)
    # Convert hex data for C compatibility
    string(REGEX REPLACE "([0-9a-f][0-9a-f])" "0x\\1," filedata ${filedata})

    if (${INPUT_IS_ASCII})
      # Append termination character
      string(REGEX REPLACE ",$" ",0x00" filedata ${filedata})
    endif()
    # Append data to c file
    file(APPEND ${OUTPUT_NAME}.c "uint8_t ${filename}[] = {${filedata}};\n\nuint32_t ${filename}_size = sizeof(${filename});\n\n")
    # Append extern definitions to h file
    file(APPEND ${OUTPUT_NAME}.h "extern uint8_t ${filename}[];\n\nextern uint32_t ${filename}_size;\n\n")
  endforeach()

  # add sources to specified target
  add_library(${TARGET}_SHADERS ${OUTPUT_NAME}.c)
  target_include_directories(${TARGET}_SHADERS PUBLIC ${CMAKE_BINARY_DIR}/generated_sources)
  target_link_libraries(${TARGET} PUBLIC ${TARGET}_SHADERS)
  
endfunction()